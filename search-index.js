var searchIndex = {};
searchIndex["calloop"] = {"doc":"Calloop, a Callback-based Event Loop","items":[[3,"EventLoop","calloop","An event loop",null,null],[3,"LoopHandle","","An handle to an event loop",null,null],[3,"LoopSignal","","A signal that can be shared between thread to stop or wakeup a running event loop",null,null],[3,"Source","","An event source that has been inserted into the event loop",null,null],[3,"Idle","","An idle callback that was inserted in this loop",null,null],[0,"channel","","An MPSC channel whose receiving end is an event source",null,null],[4,"SendError","calloop::channel","",null,null],[13,"Io","","",0,null],[13,"Disconnected","","",0,null],[3,"Sender","","",null,null],[3,"SyncSender","","",null,null],[4,"TrySendError","","",null,null],[13,"Io","","",1,null],[13,"Full","","",1,null],[13,"Disconnected","","",1,null],[3,"Channel","","The receiving end of the channel",null,null],[4,"Event","","The events generated by the channel event source",null,null],[13,"Msg","","A message was received and is bundled here",2,null],[13,"Closed","","The channel was closed",2,null],[5,"channel","","Create a new asynchronous channel",null,null],[5,"sync_channel","","Create a new synchronous, bounded channel",null,null],[0,"generic","calloop","A generic event source wrapping an `Evented` type",null,null],[3,"Generic","calloop::generic","A generic event source wrapping an `Evented` type",null,null],[3,"Event","","An event generated by the `Generic` source",null,null],[12,"source","","An access to the source that generated this event",3,null],[12,"readiness","","The associated rediness",3,null],[3,"EventedFd","","An owning wrapper implementing Evented for any file descriptor based type in Unix",null,null],[12,"0","","",4,null],[0,"signals","calloop","Event source for tracking Unix signals",null,null],[4,"Signal","calloop::signals","",null,null],[13,"SIGHUP","","",5,null],[13,"SIGINT","","",5,null],[13,"SIGQUIT","","",5,null],[13,"SIGILL","","",5,null],[13,"SIGTRAP","","",5,null],[13,"SIGABRT","","",5,null],[13,"SIGBUS","","",5,null],[13,"SIGFPE","","",5,null],[13,"SIGKILL","","",5,null],[13,"SIGUSR1","","",5,null],[13,"SIGSEGV","","",5,null],[13,"SIGUSR2","","",5,null],[13,"SIGPIPE","","",5,null],[13,"SIGALRM","","",5,null],[13,"SIGTERM","","",5,null],[13,"SIGSTKFLT","","",5,null],[13,"SIGCHLD","","",5,null],[13,"SIGCONT","","",5,null],[13,"SIGSTOP","","",5,null],[13,"SIGTSTP","","",5,null],[13,"SIGTTIN","","",5,null],[13,"SIGTTOU","","",5,null],[13,"SIGURG","","",5,null],[13,"SIGXCPU","","",5,null],[13,"SIGXFSZ","","",5,null],[13,"SIGVTALRM","","",5,null],[13,"SIGPROF","","",5,null],[13,"SIGWINCH","","",5,null],[13,"SIGIO","","",5,null],[13,"SIGPWR","","",5,null],[13,"SIGSYS","","",5,null],[3,"siginfo","","",null,null],[12,"ssi_signo","","",6,null],[12,"ssi_errno","","",6,null],[12,"ssi_code","","",6,null],[12,"ssi_pid","","",6,null],[12,"ssi_uid","","",6,null],[12,"ssi_fd","","",6,null],[12,"ssi_tid","","",6,null],[12,"ssi_band","","",6,null],[12,"ssi_overrun","","",6,null],[12,"ssi_trapno","","",6,null],[12,"ssi_status","","",6,null],[12,"ssi_int","","",6,null],[12,"ssi_ptr","","",6,null],[12,"ssi_utime","","",6,null],[12,"ssi_stime","","",6,null],[12,"ssi_addr","","",6,null],[3,"Event","","An event generated by the signal event source",null,null],[3,"Signals","","An event source for receiving Unix signals",null,null],[0,"timer","calloop","Timer-based event sources",null,null],[3,"Timeout","calloop::timer","",null,null],[3,"Timer","","A Timer event source",null,null],[3,"TimerHandle","","An handle to a timer, used to set or cancel timeouts",null,null],[11,"clone","calloop","",7,{"i":[{"n":"self"}],"o":{"n":"loophandle"}}],[11,"insert_source","","Insert an new event source in the loop",7,{"i":[{"n":"self"},{"n":"e"},{"n":"f"}],"o":{"g":["source"],"n":"result"}}],[11,"insert_idle","","Insert an idle callback",7,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"idle"}}],[11,"new","","Create a new event loop",8,{"o":{"g":["eventloop"],"n":"result"}}],[11,"handle","","Retrieve a loop handle",8,{"i":[{"n":"self"}],"o":{"n":"loophandle"}}],[11,"dispatch","","Dispatch pending events to their callbacks",8,{"i":[{"n":"self"},{"g":["duration"],"n":"option"},{"n":"data"}],"o":{"n":"result"}}],[11,"get_signal","","Get a signal to stop this event loop from running",8,{"i":[{"n":"self"}],"o":{"n":"loopsignal"}}],[11,"run","","Run this event loop",8,{"i":[{"n":"self"},{"g":["duration"],"n":"option"},{"n":"data"},{"n":"f"}],"o":{"n":"result"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"loopsignal"}}],[11,"stop","","Stop the event loop",9,{"i":[{"n":"self"}]}],[11,"wakeup","","Wake up the event loop",9,{"i":[{"n":"self"}]}],[11,"register","calloop::channel","",10,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"reregister","","",10,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"deregister","","",10,{"i":[{"n":"self"},{"n":"poll"}],"o":{"n":"result"}}],[11,"interest","","",10,{"i":[{"n":"self"}],"o":{"n":"ready"}}],[11,"pollopts","","",10,{"i":[{"n":"self"}],"o":{"n":"pollopt"}}],[11,"make_dispatcher","","",10,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["refcell"],"n":"rc"}}],[11,"new","calloop::generic","Wrap a `Evented` type into a `Generic` event source",11,{"i":[{"n":"e"}],"o":{"n":"generic"}}],[11,"set_interest","","Change the interest for this evented source",11,{"i":[{"n":"self"},{"n":"ready"}]}],[11,"set_pollopts","","Change the poll options for this evented source",11,{"i":[{"n":"self"},{"n":"pollopt"}]}],[11,"unwrap","","Unwrap the `Generic` source to retrieve the underlying `Evented`.",11,{"i":[{"n":"self"}],"o":{"g":["refcell"],"n":"rc"}}],[11,"from_fd_source","","Wrap a file descriptor based source into a `Generic` event source.",11,{"i":[{"n":"fd"}],"o":{"g":["eventedfd"],"n":"generic"}}],[11,"register","","",4,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"reregister","","",4,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"deregister","","",4,{"i":[{"n":"self"},{"n":"poll"}],"o":{"n":"result"}}],[11,"register","","",11,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"reregister","","",11,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"deregister","","",11,{"i":[{"n":"self"},{"n":"poll"}],"o":{"n":"result"}}],[11,"interest","","",11,{"i":[{"n":"self"}],"o":{"n":"ready"}}],[11,"pollopts","","",11,{"i":[{"n":"self"}],"o":{"n":"pollopt"}}],[11,"make_dispatcher","","",11,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["refcell"],"n":"rc"}}],[11,"clone","calloop::signals","",12,{"i":[{"n":"self"}],"o":{"n":"event"}}],[11,"signal","","Retrieve the signal number that was receive",12,{"i":[{"n":"self"}],"o":{"n":"signal"}}],[11,"full_info","","Access the full `siginfo_t` associated with this signal event",12,{"i":[{"n":"self"}],"o":{"n":"siginfo"}}],[11,"new","","Create a new signal event source listening on the specified list of signals",13,null],[11,"add_signals","","Add a list of signals to the signals source",13,null],[11,"remove_signals","","Remove a list of signals to the signals source",13,null],[11,"set_signals","","Replace the list of signals of the source",13,null],[11,"drop","","",13,{"i":[{"n":"self"}]}],[11,"register","","",13,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"reregister","","",13,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"deregister","","",13,{"i":[{"n":"self"},{"n":"poll"}],"o":{"n":"result"}}],[11,"interest","","",13,{"i":[{"n":"self"}],"o":{"n":"ready"}}],[11,"pollopts","","",13,{"i":[{"n":"self"}],"o":{"n":"pollopt"}}],[11,"make_dispatcher","","",13,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["refcell"],"n":"rc"}}],[11,"new","calloop::timer","Create a new timer with default parameters",14,{"o":{"n":"timer"}}],[11,"with_resolution","","Create a new timer with a specific time resolution",14,{"i":[{"n":"duration"}],"o":{"n":"timer"}}],[11,"handle","","Get an handle for this timer",14,{"i":[{"n":"self"}],"o":{"n":"timerhandle"}}],[11,"clone","","",15,{"i":[{"n":"self"}],"o":{"n":"timerhandle"}}],[11,"add_timeout","","Set a new timeout",15,{"i":[{"n":"self"},{"n":"duration"},{"n":"t"}],"o":{"g":["timeout"],"n":"result"}}],[11,"cancel_timeout","","Cancel a previsouly set timeout and retrieve the associated data",15,{"i":[{"n":"self"},{"n":"timeout"}],"o":{"n":"option"}}],[11,"register","","",14,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"reregister","","",14,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"deregister","","",14,{"i":[{"n":"self"},{"n":"poll"}],"o":{"n":"result"}}],[11,"interest","","",14,{"i":[{"n":"self"}],"o":{"n":"ready"}}],[11,"pollopts","","",14,{"i":[{"n":"self"}],"o":{"n":"pollopt"}}],[11,"make_dispatcher","","",14,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["refcell"],"n":"rc"}}],[11,"reregister","calloop","Refresh the registration of this event source to the loop",16,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"remove","","Remove this source from the event loop",16,{"i":[{"n":"self"}],"o":{"n":"e"}}],[11,"deref","","",16,{"i":[{"n":"self"}],"o":{"n":"e"}}],[11,"deref_mut","","",16,{"i":[{"n":"self"}],"o":{"n":"e"}}],[11,"cancel","","Cancel the idle callback if it was not already run",17,{"i":[{"n":"self"}]}],[8,"EventSource","","Trait representing a source that can be inserted into an EventLoop",null,null],[16,"Event","","The type of events generated by your sources",18,null],[10,"interest","","The interest value that will be given to `mio` when registering your source",18,{"i":[{"n":"self"}],"o":{"n":"ready"}}],[10,"pollopts","","The pollopt value that will be given to `mio` when registering your source",18,{"i":[{"n":"self"}],"o":{"n":"pollopt"}}],[10,"make_dispatcher","","Wrap an user callback into a dispatcher, that will convert an `mio` readiness into an event",18,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["refcell"],"n":"rc"}}],[8,"EventDispatcher","","An event dispatcher",null,null],[10,"ready","","The source has a readiness event",19,{"i":[{"n":"self"},{"n":"ready"},{"n":"data"}]}],[11,"clone","calloop::signals","",6,{"i":[{"n":"self"}],"o":{"n":"signalfd_siginfo"}}],[11,"from","calloop::channel","",1,{"i":[{"n":"error"}],"o":{"n":"trysenderror"}}],[11,"from","","",1,{"i":[{"n":"senderror"}],"o":{"n":"trysenderror"}}],[11,"from","","",0,{"i":[{"n":"error"}],"o":{"n":"senderror"}}],[11,"from","","",1,{"i":[{"n":"trysenderror"}],"o":{"n":"trysenderror"}}],[11,"from","","",0,{"i":[{"n":"senderror"}],"o":{"n":"senderror"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"clone","","",20,{"i":[{"n":"self"}],"o":{"n":"sender"}}],[11,"clone","calloop::timer","",21,{"i":[{"n":"self"}],"o":{"n":"timeout"}}],[11,"clone","calloop::channel","",22,{"i":[{"n":"self"}],"o":{"n":"syncsender"}}],[11,"description","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"description","","",1,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","calloop::timer","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"clone","calloop::signals","",5,{"i":[{"n":"self"}],"o":{"n":"signal"}}],[11,"cmp","","",5,{"i":[{"n":"self"},{"n":"signal"}],"o":{"n":"ordering"}}],[11,"hash","","",5,null],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"signal"}],"o":{"n":"bool"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"partial_cmp","","",5,{"i":[{"n":"self"},{"n":"signal"}],"o":{"g":["ordering"],"n":"option"}}],[11,"send","calloop::channel","",20,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["senderror"],"n":"result"}}],[11,"send","","",22,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["senderror"],"n":"result"}}],[11,"try_send","","",22,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["trysenderror"],"n":"result"}}],[11,"iterator","calloop::signals","",5,{"o":{"n":"signaliterator"}}],[11,"from_c_int","","",5,{"i":[{"n":"i32"}],"o":{"g":["signal","error"],"n":"result"}}]],"paths":[[4,"SendError"],[4,"TrySendError"],[4,"Event"],[3,"Event"],[3,"EventedFd"],[4,"Signal"],[3,"siginfo"],[3,"LoopHandle"],[3,"EventLoop"],[3,"LoopSignal"],[3,"Channel"],[3,"Generic"],[3,"Event"],[3,"Signals"],[3,"Timer"],[3,"TimerHandle"],[3,"Source"],[3,"Idle"],[8,"EventSource"],[8,"EventDispatcher"],[3,"Sender"],[3,"Timeout"],[3,"SyncSender"]]};
initSearch(searchIndex);
